Calendar Derby  - adrient@google.com                 - yhorxnzctrqizeyd

ALWAYS REMEMBER: what's the minimal interface which has "magic"?!?!

-- hayes simplification --

WHAT CAN I DO IN ONE HOUR?

[ ] simplify date selection
  [ ] all events can only be had on one of two days
  [ ] all events are four hours long
    [ ] simplify constraint view
    [ ] start with default height
    [ ] events can't be resized
      [ ] put in validate length == 4
[ ] get rid of activity
  [ ] all activities are "no activity"
  [ ] prove it in validate
[ ] both
  [ ] update the edit UI
  [ ] update the request UI
  [ ] get the submit focus working
  [ ] auto open for 

-- old simplified interface --  
  
  [ ] make it so that you can only add a single event
    [ ] color the events properly in "do mode"
  [ ] score things properly
  [ ] events are cancel-able
  [ ] new calendar events are completely undefined
  [ ] small fixes below
  [ ] johnny's comments

-- during the flight  --

  
-- small fixes --

[ ] points - SCORE VARIATION : length ** 1.5 / num_slots (??)
[ ] separate out gameView
[ ] fixes to eventEditView
  [ ] tab trigger on edit event
  [ ] double click to launch view
[ ] emphasize supplicant  
  [ ] scroll to show supplicant
  [ ] nice bounce animation
[ ] when no text in the text area: "(type instruction in here)"

-- before launch -- 

[ ] access permissions for get/post/put/delete
  [ ] RemoteModel
  [ ] RemoteMethod

# NOTES #

icons:
http://www.iconarchive.com/show/face-avatars-icons-by-deleket.html

<!-- [x] test out history API
  [x] can this be used as a router? - YES .. but some weirdness to figure out

[ ] do the whole remote model thing


[ ] test out the channel API
  [ ] do I want to wrap it?
  [ ] perhaps as a remote function call?
  
[ ] start to write the game

[ ] create game mockups (keynote?)
[ ] CMU stuff
[ ] move to github
  [ ] recursive copy to a new folder
  [ ] clear out the bad files (including tmproj)
  [ ] main.coffee/html -> game.coffee/html
  [ ] submit to github
  [ ] add tmproj
[ ] start coding a mockup of the game


variable naming conventions:

*_json -> a python object which can be serialized with json.dumps -->
